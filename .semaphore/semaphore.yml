version: v1.0
name: Test pipeline

global_job_config:
  prologue:
    commands:
      - wget https://github.com/semaphoreci/artifact/releases/download/v0.1.3/artifact_Linux_x86_64.tar.gz
      - tar xzf artifact_Linux_x86_64.tar.gz
      - sudo mv artifact /usr/bin/

agent:
  machine:
    type: e1-standard-2
  containers:
    - name: main
      image: semaphoreci/ruby:2.6-node-browsers

    - name: db
      image: postgres:9.6
      env_vars:
        - name: POSTGRES_PASSWORD
          value: ""
        - name: POSTGRES_USER
          value: split
        - name: POSTGRES_DB
          value: split_test

blocks:
  - name: RSpec
    task:
      env_vars:
          - name: RAILS_ENV
            value: test
          - name: RACK_ENV
            value: test
          - name: RSPEC_RETRY_RETRY_COUNT
            value: "2"
          - name: SKIP_COVERAGE_CHECK
            value: "true"
      prologue:
          commands:
            - checkout
            #- cache restore gems-$SEMAPHORE_GIT_BRANCH-$(checksum Gemfile.lock),gems-$SEMAPHORE_GIT_BRANCH-,gems-master-
            #- bundle install --deployment -j 4 --path vendor/bundle
            #- cache store gems-$SEMAPHORE_GIT_BRANCH-$(checksum Gemfile.lock) vendor/bundle
            #- cache restore yarn-$SEMAPHORE_GIT_BRANCH-$(checksum yarn.lock),yarn-$SEMAPHORE_GIT_BRANCH,yarn-master
            #- yarn install --cache-folder .cache/yarn
            #- cache store yarn-$SEMAPHORE_GIT_BRANCH-$(checksum yarn.lock) .cache/yarn
            #- cp .env.test .env
            #- bundle exec rake db:schema:load
            #- gem install semaphore_test_boosters

      epilogue:
        always:
          commands:
            - artifact push workflow coverage/.resultset.json --destination coverage_results/$JOB.json

      jobs:
        - name: RSpec
          matrix:
          - env_var: JOB
            values: ["1", "2", "3", "4", "5", "6", "7", "8"]
          commands:
            #- rspec_booster --job $JOB/8
            - echo "Boosters"
            - mkdir coverage
            - echo "report $JOB" > coverage/.resultset.json

  - name: Coverage & Breakman & Rubocop
    task:
      env_vars:
          - name: RAILS_ENV
            value: test
          - name: RACK_ENV
            value: test
          - name: SKIP_COVERAGE_CHECK
            value: "true"
      prologue:
          commands:
            - checkout
            #- cache restore gems-$SEMAPHORE_GIT_BRANCH-$(checksum Gemfile.lock),gems-$SEMAPHORE_GIT_BRANCH-,gems-master-
            #- bundle install --deployment -j 4 --path vendor/bundle
            #- cache store gems-$SEMAPHORE_GIT_BRANCH-$(checksum Gemfile.lock) vendor/bundle

      jobs:
        - name: Breakman
          commands:
            - echo "bundle exec brakeman -z"

        - name: rubocop
          commands:
            - echo "bundle exec rubocop"

        - name: Merge Coverage
          commands:
            - echo "Merge coverage"
            - artifact pull workflow coverage_results
            - ls -lah coverage_results
            # - RUN_COVERAGE=true bundle exec rake simplecov:report_coverage
            # rake task about generates e.g. index.html file
            - echo "My coverage report" > index.html
            - artifact push workflow index.html --destination coverage-report.html


promotions:
  - name: "Deploy to sandbox"
    pipeline_file: sandbox.yml
  - name: "Deploy to production"
    pipeline_file: prod.yml
